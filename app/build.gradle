apply plugin: "com.android.application"

android {
    compileSdkVersion 28

    def currentVersionCode = getVersionCode()
    def currentVersionName = getVersionName()

    defaultConfig {
        applicationId "com.supet.react"
        minSdkVersion 16
        targetSdkVersion 28
        versionCode currentVersionCode
        versionName currentVersionName
    }

    sourceSets {
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        release {
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
    flavorDimensions "env"
    productFlavors {
        localhost {}
    }

}


def getVersionCode() {
    def versionFile = file('version.properties')

    if (versionFile.exists()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = versionProps['build.number'].toInteger()
        println('Current version code is ' + versionCode.toString())
        return versionCode
    } else {
        //throw new GradleException("Could not find version.properties!")
    }
}

def getVersionName() {
    def versionFile = file('version.properties')

    if (versionFile.exists()) {
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionFile))
        def versionCode = versionProps['build.versionName'].toString()
        println('Current version code is ' + versionCode.toString())
        return versionCode
    } else {
        //throw new GradleException("Could not find version.properties!")
    }
}

dependencies {
    fileTree(dir: "libs", include: ["*.jar"])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation "com.facebook.react:react-native:0.62.2"
    implementation project(path: ':libreacthotfix')
    implementation project(path: ':web')
    implementation 'com.zhy:okhttputils:2.6.2'
    implementation 'com.google.code.gson:gson:2.8.5'

}

